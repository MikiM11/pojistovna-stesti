import React, { useState, useEffect } from "react"; 
import { FlashMessage } from "../components/FlashMessage"; // Komponenta pro zobrazen√≠ chybov√© zpr√°vy
import { Spinner } from "../components/Spinner"; // Komponenta pro zobrazen√≠ indik√°toru naƒç√≠t√°n√≠
import { apiGet } from "../utils/api"; // Funkce pro z√≠sk√°v√°n√≠ dat z API

function InsuredList() {
  // Stavy komponenty
  const [insureds, setInsureds] = useState([]); // Pole pro seznam poji≈°tƒõnc≈Ø
  const [error, setError] = useState(null); // Stav pro uchov√°n√≠ p≈ô√≠padn√© chybov√© zpr√°vy
  const [selectedInsuredId, setSelectedInsuredId] = useState(null); // Uchov√°v√° ID aktu√°lnƒõ vybran√©ho poji≈°tƒõnce
  const [isLoading, setIsLoading] = useState(true); // Stav pro indikaci naƒç√≠t√°n√≠ dat

  // useEffect pro naƒç√≠t√°n√≠ dat p≈ôi prvn√≠m renderu komponenty
  useEffect(() => {
    const loadInsureds = async () => {
      try {
        const data = await apiGet("insureds"); // Z√≠sk√°n√≠ dat z API
        setInsureds(data); // Nastaven√≠ seznamu poji≈°tƒõnc≈Ø do stavu
        setIsLoading(false); // Ukonƒçen√≠ naƒç√≠t√°n√≠
      } catch (error) {
        setError("Chyba naƒç√≠t√°n√≠ dat. ...asi v√≠tr... ü§∑üèª‚Äç‚ôÇÔ∏è"); // Nastaven√≠ chybov√© zpr√°vy
        setIsLoading(false); // Ukonƒçen√≠ naƒç√≠t√°n√≠ i p≈ôi chybƒõ
      }
    };

    loadInsureds(); // Vol√°n√≠ funkce pro naƒçten√≠ dat
  }, []); // Pr√°zdn√© pole z√°vislost√≠ znamen√°, ≈æe se useEffect spust√≠ jen p≈ôi prvn√≠m renderu

  // Funkce pro obsluhu kliknut√≠ na ≈ô√°dek tabulky
  const handleRowClick = (insuredID) => {
    setSelectedInsuredId(selectedInsuredId === insuredID ? null : insuredID); // P≈ôep√≠n√° zobrazen√≠ detail≈Ø poji≈°tƒõnce
  };

  return (
    <div>
      {/* Zobrazen√≠ indik√°toru naƒç√≠t√°n√≠ */}
      {isLoading && <Spinner />}
      {/* Zobrazen√≠ chybov√© zpr√°vy */}
      {error && <FlashMessage message={error} type="danger" />}
      {/* Zobrazen√≠ tabulky, pokud nejsou chyby */}
      {!error && (
        <table className="table table-striped">
          <thead>
            <tr>
              <th>Jm√©no</th>
              <th>P≈ô√≠jmen√≠</th>
              <th>Ulice</th>
              <th>Mƒõsto</th>
              <th>PSƒå</th>
            </tr>
          </thead>
          <tbody>
            {/* Iterace p≈ôes seznam poji≈°tƒõnc≈Ø */}
            {insureds.map((insured) => (
              <>
                {/* ≈ò√°dek tabulky pro z√°kladn√≠ √∫daje poji≈°tƒõnce */}
                <tr
                  key={insured._id} // Kl√≠ƒç pro React
                  onClick={() => handleRowClick(insured._id)} // P≈ôep√≠n√° detaily poji≈°tƒõnce
                  className={
                    selectedInsuredId === insured._id ? "table-active" : "" // Zv√Ωraznƒõn√≠ vybran√©ho ≈ô√°dku
                  }
                >
                  <td>{insured.firstName}</td>
                  <td>{insured.lastName}</td>
                  <td>{insured.street}</td>
                  <td>{insured.city}</td>
                  <td>{insured.postalCode}</td>
                </tr>
                {/* ≈ò√°dek pro zobrazen√≠ detail≈Ø poji≈°tƒõnce */}
                {selectedInsuredId === insured._id && (
                  <tr key={`${insured._id}-details`}>
                    <td colSpan="5"> {/* Spojen√≠ v≈°ech sloupc≈Ø pro detaily */}
                      <div className="p-3 bg-light border">
                        <h5>Detail poji≈°tƒõnce</h5>
                        {/* Z√°kladn√≠ detaily poji≈°tƒõnce */}
                        <p>
                          <strong>Email:</strong> {insured.email}
                        </p>
                        <p>
                          <strong>Telefon:</strong> {insured.phone}
                        </p>
                        <h6>Seznam poji≈°tƒõn√≠</h6>
                        {/* Kontrola, zda poji≈°tƒõnec m√° sjednan√° poji≈°tƒõn√≠ */}
                        {insured.insurances && insured.insurances.length > 0 ? (
                          <ul>
                            {/* Iterace p≈ôes poji≈°tƒõn√≠ poji≈°tƒõnce */}
                            {insured.insurances.map((insurance) => (
                              <li key={insurance._id}>
                                <strong>Typ:</strong> {insurance.type.name}<br />
                                <strong>P≈ôedmƒõt:</strong> {insurance.subject}<br />
                                <strong>ƒå√°stka:</strong> {insurance.amount} Kƒç<br />
                                <strong>Platnost:</strong>
                                {new Date(
                                  insurance.validFrom
                                ).toLocaleDateString()}
                                -
                                {new Date(
                                  insurance.validTo
                                ).toLocaleDateString()}
                              </li>
                            ))}
                          </ul>
                        ) : (
                          <p>≈Ω√°dn√© sjednan√© poji≈°tƒõn√≠</p> // Pokud poji≈°tƒõnec nem√° ≈æ√°dn√° poji≈°tƒõn√≠
                        )}
                      </div>
                    </td>
                  </tr>
                )}
              </>
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
}

export default InsuredList;